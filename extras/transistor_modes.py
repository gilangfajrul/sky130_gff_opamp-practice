#!/usr/bin/env python3
#
# Read a file generated by ngspice using:
#    set altshow
#    show >> <filename>
#
# and parse it for values vgs, vds, vth, and vdsat for all FET devices,
# and compute whether each device is operating in the cutoff, saturation,
# or linear region.  Used as a diagnostic tool for design.
#

import sys
import re

# Determine the mode of the transistor based on vgs, vds, vth, and vdsat,
# and return 'Cutoff', 'Saturation', or 'Linear', accordingly.

def transmode(transdict):
    vgs = transdict['vgs']
    vds = transdict['vds']
    vth = transdict['vth']
    vdsat = transdict['vdsat']

    if transdict['type'] == 'nfet':
        if vgs <= vth:
            return 'Cutoff'
        if vds >= vdsat:
            return 'Saturation'
        else:
            return 'Linear'
    elif transdict['type'] == 'pfet':
        if abs(vgs) <= abs(vth):
            return 'Cutoff'
        if abs(vds) >= abs(vdsat):
            return 'Saturation'
        else:
            return 'Linear'

# Regular expressions for parsing out a device name and parameters from
# ngspice 'show' output.

devstr = re.compile(r'^[^ ]\.(.*):')
fetstr = re.compile(r'^m\.(.*):')
parstr = re.compile(r'[ ]*(vgs|vds|vth|id|vdsat)[ ]*=[ ]*(.*)')
typestr = re.compile(r'.*(nfet|pfet)')

if len(sys.argv) > 1:
    filename = sys.argv[1]
else:
    print('Usage: transistor_modes.py <filename>')
    sys.exit(1)

translist = []
transdict = None
devname = None

with open(filename, 'r') as ifile:
    showlines = ifile.read().splitlines()
    for line in showlines:
        dmatch = devstr.match(line)
        fmatch = fetstr.match(line)
        pmatch = parstr.match(line)

        if dmatch:
            transdict = None
        if fmatch:
            devname = fmatch.group(1)
            tmatch = typestr.match(devname)
            if tmatch:
                devtype = tmatch.group(1)
                transdict = {}
                transdict['name'] = devname
                transdict['type'] = devtype
                translist.append(transdict)
        if pmatch and transdict:
            parname = pmatch.group(1)
            parval = pmatch.group(2)
            transdict[parname] = float(parval)

for trans in translist:
    tmode = '{:12s}'.format(transmode(trans))
    ttype = '{:5s}'.format(trans['type'])
    tname = '{:10s}'.format(trans['name'])
    tover = '{:09g}'.format(abs(trans['vgs'] - trans['vth']))
    tvgs = '{:09g}'.format(trans['vgs'])
    tvth = '{:09g}'.format(trans['vth'])
    tvdsat = '{:09g}'.format(trans['vdsat'])
    tvds = '{:09g}'.format(trans['vds'])
    tid = '{:09g}'.format(trans['id'])
    
    print(ttype + '|' + tname + '|' + tmode, end='')
    print('| |vgs-vth| = ' + tover, end='')
    print('| vgs = ' + tvgs, end='')
    print('| vth = ' + tvth, end='')
    print('| vdsat = ' + tvdsat, end='')
    print('| vds = ' + tvds, end='')
    print('| id = ' + tid)

sys.exit(0)
